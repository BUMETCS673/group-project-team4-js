{
    "root": true,
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:import/recommended",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json",
        "tsconfigRootDir": "./",
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": ["import", "react", "react-hooks", "@typescript-eslint", "prettier"],
    "rules": {
        "no-use-before-define": "off",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        "react/jsx-filename-extension": [
            "warn",
            {
                "extensions": [".tsx"]
            }
        ],
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "ts": "never",
                "tsx": "never"
            }
        ],
        "react/react-in-jsx-scope": "off",
        "react/function-component-definition": "off",
        "no-shadow": "off",
        "arrow-body-style": "off",
        "@typescript-eslint/no-shadow": ["warn"],
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        // in tsx/jsx files this warn is equal to error
        "react-hooks/rules-of-hooks": "warn",
        "react-hooks/exhaustive-deps": "warn",
        "import/prefer-default-export": "off",
        "react/prop-types": "off",
        "react/display-name": "off",
        "react/prefer-stateless-function": "off",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-empty-interface": "warn",
        "no-unused-vars": "warn",
        "@typescript-eslint/ban-types": "off"
    },
    "settings": {
        "import/resolver": {
            "typescript": {}
        },
        "react": {
            "version": "detect"
        }
    }
}
